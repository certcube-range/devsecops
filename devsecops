pipeline {
  agent any
  tools {
    maven 'maven'
    }
    stages {
    stage ('initialize') {
      steps {
        sh '''
                echo  "PATH = ${PATH}"
                echo  "M2_home = ${M2_HOME}"
           '''     
        }
      }
     
     stage ( 'git secrets') {
        steps {
            sh 'rm output_truffle || true'
            sh 'docker run gesellix/trufflehog --json https://github.com/certcube-range/devsecops.git > output_truffle '
            sh 'cat output_truffle'
            }
          }
          
      stage ( ' SCA ' ) { 
        steps { 
            sh 'rm dependency* || true'
            sh ' wget https://raw.githubusercontent.com/certcube-range/devsecops/main/dependency.sh'
            sh ' chmod +x dependency.sh'
            sh 'bash dependency.sh'
            sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'
            }
          }
     stage ('Build') {
        steps {
        sh 'mvn clean package'
        }
       }
       
     stage ('Deployment') {
        steps {
            sshagent(['tomcat']) {
                sh 'sshpass -f /home/azureuser/shpass scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null target/*.war azureuser@20.231.67.211:/home/azureuser/tomcat/apache-tomcat-9.0.62/webapps/webapp.war'
                }
                
            }
            
       }
    
  }
  
}
